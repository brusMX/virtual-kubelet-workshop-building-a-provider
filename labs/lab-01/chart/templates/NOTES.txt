1. Get the application URL by running these commands:
{{- if contains "NodePort" .Values.service.type }}
  If running on minikube then run these commands in bash
    export uiPort=$(kubectl get service --namespace {{ .Release.Namespace }} -l "app={{ template "name" . }},release={{ .Release.Name }}" -o jsonpath={.items[0].spec.ports[0].nodePort}) && \
    minikubeIp=$(sudo minikube ip) && \
    echo "The web UI is listening on  http://$minikubeIp:${uiPort}"

  If running on Docker for Mac then run these commands in bash
    export uiPort=$(kubectl get service --namespace {{ .Release.Namespace }} -l "app={{ template "name" . }},release={{ .Release.Name }}" -o jsonpath={.items[0].spec.ports[0].nodePort}) && \
    echo "The web UI is listening on  http://host.docker.internal:${uiPort}"


  If running on Docker for Windows then run these commands in PowerShell
    $uiPort=$(kubectl get service --namespace {{ .Release.Namespace }} -l "app={{ template "name" . }},release={{ .Release.Name }}" -o jsonpath="{.items[0].spec.ports[0].nodePort}"); `
    echo "The web UI is listening on  http://host.docker.internal:${uiPort}";

  
{{- else if contains "LoadBalancer" .Values.service.type }}
     NOTE: It may take a few minutes for the LoadBalancer IP to be available.
           You can watch the status of by running 'kubectl get svc -w {{ template "fullname" . }}'
  export SERVICE_IP=$(kubectl get svc --namespace {{ .Release.Namespace }} {{ template "fullname" . }} -o jsonpath='{.status.loadBalancer.ingress[0].ip}')
  echo http://$SERVICE_IP:{{ .Values.service.port }}
{{- else if contains "ClusterIP" .Values.service.type }}
  export POD_NAME=$(kubectl get pods --namespace {{ .Release.Namespace }} -l "app={{ template "name" . }},release={{ .Release.Name }}" -o jsonpath="{.items[0].metadata.name}")
  echo "Visit http://127.0.0.1:8080 to use your application"
  kubectl port-forward $POD_NAME 8080:80
{{- end }}
