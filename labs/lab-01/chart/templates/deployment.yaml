apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: {{ template "fullname" . }}
  labels:
    app: {{ template "name" . }}
    chart: {{ template "chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ template "name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "name" . }}
        release: {{ .Release.Name }}
    spec:
      containers:
        - name: web-ui
          image: "{{ .Values.webUi.image.repository }}:{{ .Values.webUi.image.tag }}"
          imagePullPolicy: {{ .Values.webUi.image.pullPolicy }}
          ports:
            - containerPort: 80
              protocol: TCP
              name: http
          volumeMounts:
            - name: webui-nginx-config
              mountPath: /etc/nginx/nginx.conf
              subPath: nginx.conf
        - name: virtual-kubelet
          image: "{{ .Values.virtualKubelet.image.repository }}:{{ .Values.virtualKubelet.image.tag }}"
          imagePullPolicy: {{ .Values.virtualKubelet.image.pullPolicy }}
          env:
            - name: WEB_ENDPOINT_URL
              value: {{ .Values.webApiUrl }}
            - name: KUBELET_PORT
              value: "10250"
            - name: APISERVER_CERT_LOCATION
              value: /etc/virtual-kubelet/cert.pem
            - name: APISERVER_KEY_LOCATION
              value: /etc/virtual-kubelet/key.pem
            - name: VKUBELET_POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
          volumeMounts:
            - name: credentials
              mountPath: "/etc/virtual-kubelet"
          command: ["virtual-kubelet"]
          args: ["--provider", "web", "--nodename", {{ default "virtual-kubelet-web" .Values.virtualKubelet.nodeName | quote }}]
      volumes:
        - name: webui-nginx-config 
          configMap:
            name: webui-config # TODO use deployment name
        - name: credentials
          secret:
            secretName: {{ template "fullname" . }}
      {{ if .Values.rbac.enabled }}
      serviceAccountName: {{ template "fullname" . }}
      {{ end }}
